<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:security="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		">


    <!-- override for acess-decision-manager required for roleHierarchyVoter to work in method level security -->
    <global-method-security pre-post-annotations="enabled" access-decision-manager-ref="methodAccessDecisionManager">
        <expression-handler ref="expressionHandler"/>
    </global-method-security>

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="JPAuserDetailsService">
            <password-encoder hash="md5">
                <salt-source user-property="username"/>
            </password-encoder>
        </authentication-provider>
        <authentication-provider ref="springSocialAuthenticationProvider"/>
    </authentication-manager>


    <http pattern="/resources" security="none"/>
    <http pattern="/js" security="none"/>
    <http pattern="/images" security="none"/>
    <http pattern="/css" security="none"/>

    <!-- accessDecisionManager override for roleHierarchyVoter-->
    <http auto-config="true" use-expressions="true" access-decision-manager-ref="accessDecisionManager">
        <intercept-url pattern="/provider/gwas" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/login" access="permitAll"/>
        <intercept-url pattern="/logout" access="permitAll"/>
        <intercept-url pattern="/auth/facebook" access="permitAll"/>
        <intercept-url pattern="/denied" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/" access="permitAll"/>
        <intercept-url pattern="/user" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
        <form-login authentication-failure-url="/login?login_error=true"
                    default-target-url="/"/>
        <access-denied-handler error-page="/denied"/>
        <logout invalidate-session="true"
                logout-success-url="/"
                logout-url="/logout"/>

        <remember-me key="gwaPortalRememberMe" services-ref="customPersistentTokenBasedRememberMeServices"/>

        <security:custom-filter before="PRE_AUTH_FILTER"
                                ref="springSocialSecurityAuthenticationFilter"/>


    </http>

    <beans:bean id="customPersistentTokenBasedRememberMeServices"
                class="com.gmi.nordborglab.browser.server.security.CustomPersistentTokenRememberMeServices">
        <beans:constructor-arg name="key" value="gwaPortalRememberMe"/>
        <beans:constructor-arg name="userDetailsService" ref="JPAuserDetailsService"/>
        <beans:constructor-arg ref="tokenRepository"/>
    </beans:bean>

    <beans:bean id="tokenRepository"
                class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <beans:property name="createTableOnStartup" value="false"/>
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>

    <beans:bean id="webExpressionHandler"
                class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
        <beans:property name="permissionEvaluator" ref="permissionEvaluator"/>
        <beans:property name="roleHierarchy" ref="roleHierarchy"/>
    </beans:bean>

    <beans:bean id="expressionHandler"
                class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <beans:property name="permissionEvaluator" ref="permissionEvaluator"/>
        <beans:property name="permissionCacheOptimizer">
            <beans:bean class="org.springframework.security.acls.AclPermissionCacheOptimizer">
                <beans:constructor-arg ref="aclService"/>
                <beans:property name="sidRetrievalStrategy" ref="sidRetrievalStrategy"/>
            </beans:bean>
        </beans:property>
        <beans:property name="roleHierarchy" ref="roleHierarchy"/>
    </beans:bean>

    <beans:bean id="permissionEvaluator" class="org.springframework.security.acls.AclPermissionEvaluator">
        <beans:constructor-arg ref="aclService"/>
        <beans:property name="sidRetrievalStrategy" ref="sidRetrievalStrategy"/>
        <beans:property name="permissionFactory" ref="permissionFactory"/>
    </beans:bean>

    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:property name="decisionVoters">
            <beans:list>
                <beans:ref bean="roleVoter"/>
                <beans:bean class="org.springframework.security.web.access.expression.WebExpressionVoter">
                    <beans:property name="expressionHandler" ref="webExpressionHandler"/>
                </beans:bean>
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="methodAccessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:property name="decisionVoters">
            <beans:list>
                <beans:ref bean="roleVoter"/>
                <beans:bean class="org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter">
                    <beans:constructor-arg ref="preInvocationAdvice"/>
                </beans:bean>
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="preInvocationAdvice"
                class="org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice"
                p:expressionHandler-ref="expressionHandler"/>

    <beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
        <beans:constructor-arg ref="roleHierarchy"/>
    </beans:bean>
    <beans:bean id="roleHierarchy"
                class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <beans:property name="hierarchy">
            <beans:value>
                ROLE_ADMIN > ROLE_USER
                ROLE_USER > ROLE_ANONYMOUS
            </beans:value>
        </beans:property>
    </beans:bean>

</beans:beans>